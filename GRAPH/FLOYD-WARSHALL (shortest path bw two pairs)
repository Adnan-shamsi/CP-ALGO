
vector<pair<int,int>> ed[10000];
int n,m,q;
ll dist[505][505];
void floyd_warshall()
{
	memset(dist,0x3f,sizeof(dist));

	rep(i,n)
	{
		dist[i][i]=0;
		for(auto road : ed[i])
		{
			
			int next_ed= road.F;
			ll weight= road.S;
			dist[i][next_ed]=  min(weight, dist[i][next_ed]);
		}
	}
	for(int k=1;k<=n;k++)
	{
		
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<=n;j++)
			{
				dist[i][j]= min(dist[i][j], dist[i][k]+dist[k][j]);
			}
		}
		
		
	}
}


int main()
{
	
	cin>>n>>m>>q;
	while(m--)
	{
		int a,b,w;
		cin>>a>>b>>w;
		ed[a].pb({b,w});
		ed[b].pb({a,w});	
	}
	floyd_warshall();
	while(q--)
	{
		int x,y;
		cin>>x>>y;
		if(min(dist[x][y],dist[y][x])>=1e18) cout<<"-1"<<endl;
		else cout<<min(dist[x][y],dist[y][x])<<endl;
	}
	
}
